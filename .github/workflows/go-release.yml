name: Release CI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4.1.7

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        GOOS=linux GOARCH=amd64 go build -v -o goimg2pdf-${{ steps.get_version.outputs.VERSION }}-linux-amd64 ./...
        GOOS=windows GOARCH=amd64 go build -v -o goimg2pdf-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe ./...
        GOOS=darwin GOARCH=amd64 go build -v -o goimg2pdf-${{ steps.get_version.outputs.VERSION }}-darwin-amd64 ./...

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimg2pdf-${{ steps.get_version.outputs.VERSION }}-linux-amd64
        asset_name: goimg2pdf-${{ steps.get_version.outputs.VERSION }}-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimg2pdf-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
        asset_name: goimg2pdf-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimg2pdf-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
        asset_name: goimg2pdf-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
        asset_content_type: application/octet-stream
